
msgid "Submodule `box.info`"
msgstr "Вложенный модуль `box.info`"

msgid ""
"The ``box.info`` submodule provides access to information about server "
"instance variables."
msgstr ""
"Вложенный модуль ``box.info`` предоставляет доступ к информации о "
"переменных экземпляра сервера."

msgid ""
"**cluster.uuid** is the UUID of the replica set. Every instance in a "
"replica set will have the same ``cluster.uuid`` value. This value is also"
" stored in :ref:`box.space._schema <box_space-schema>` system space."
msgstr ""
"**cluster.uuid** -- это уникальный идентификатор набора реплик (UUID). У "
"каждого экземпляра в наборе реплик будет одно и то же значение "
"``cluster.uuid``. Данное значение также хранится в системном спейсе "
":ref:`box.space._schema <box_space-schema>`."

msgid ""
"**gc()** returns the state of the :ref:`Tarantool garbage collector "
"<cfg_checkpoint_daemon-garbage-collector>` including the checkpoints and "
"their consumers (users); see details :ref:`below <box_info_gc>`."
msgstr ""
"**gc()** возвращает состояние :ref:`сборщика мусора в Tarantool'е "
"<cfg_checkpoint_daemon-garbage-collector>`, в том числе контрольные точки"
" и их потребителей (пользователи); более подробную информацию см. "
":ref:`ниже <box_info_gc>`."

msgid ""
"**id** corresponds to **replication.id** (see :ref:`below "
"<box_info_replication>`)."
msgstr ""
"**id** соответствует идентификатору **replication.id** (см. :ref:`ниже "
"<box_info_replication>`)."

msgid ""
"**lsn** corresponds to **replication.lsn** (see :ref:`below "
"<box_info_replication>`)."
msgstr ""
"**lsn** соответствует регистрационному номеру **replication.lsn** (см. "
":ref:`ниже <box_info_replication>`)."

msgid ""
"**memory()** returns the statistics about memory (see :ref:`below "
"<box_info_memory>`)."
msgstr ""
"**memory()** возвращает статистику об использовании памяти (см. "
":ref:`ниже <box_info_memory>`)."

msgid ""
"**pid** is the process ID. This value is also shown by :ref:`tarantool "
"<tarantool-build>` module and by the Linux command ``ps -A``."
msgstr ""
"**pid** – идентификатор процесса. Это значение также отображается с "
"помощью модуля :ref:`tarantool <tarantool-build>`  и по команде  ``ps "
"-A`` в Linux."

msgid ""
"**ro** is ``true`` if the instance is in \"read-only\" mode (same as "
":ref:`read_only <cfg_basic-read_only>` in ``box.cfg{}``), or if status is"
" 'orphan'."
msgstr ""
"**ro** принимает значение ``true``, если экземпляр находится в режиме "
"только для чтения \"read-only\" (как :ref:`read_only <cfg_basic-"
"read_only>` в ``box.cfg{}``), или в статусе 'orphan' (одиночный)."

msgid ""
"**signature** is the sum of all **lsn** values from the vector clocks "
"(**vclock**) of all instances in the replica set."
msgstr ""
"**signature** представляет собой сумму всех значений **lsn** из векторных"
" часов (**vclock**) всех экземпляров в наборе реплик."

msgid "**status** is the current state of the instance. It can be:"
msgstr "**status** -- это текущий статус экземпляра. Он может быть:"

msgid "``running`` -- the instance is loaded,"
msgstr "``running`` -- экземпляр запущен,"

msgid ""
"``loading`` -- the instance is either recovering xlogs/snapshots or "
"bootstrapping,"
msgstr "``loading`` -- экземпляр восстанавливается из xlog'ов или snapshot'ов,"

msgid ""
"``orphan`` --  the instance has not (yet) succeeded in joining the "
"required number of masters (see :ref:`orphan status <replication-"
"orphan_status>`),"
msgstr ""
"``orphan`` -- экземпляр (еще) не подключился к необходимому количеству "
"мастеров (см. :ref:`статус orphan <replication-orphan_status>`),"

msgid ""
"``hot_standby`` -- the instance is :ref:`standing by <index-hot_standby>`"
" another instance."
msgstr ""
"``hot_standby`` -- экземпляр является :ref:`резервным <index-"
"hot_standby>` для другого экземпляра."

msgid ""
"**uptime** is the number of seconds since the instance started. This "
"value can also be retrieved with :ref:`tarantool.uptime() <tarantool-"
"build>`."
msgstr ""
"**uptime** -- это количество секунд с момента запуска экземпляра. Данное "
"значение также можно получить с помощью :ref:`tarantool.uptime() "
"<tarantool-build>`."

msgid ""
"**uuid** corresponds to **replication.uuid** (see :ref:`below "
"<box_info_replication>`)."
msgstr ""
"**uuid** соответствует идентификатору **replication.uuid** (см. "
":ref:`ниже <box_info_replication>`)."

msgid ""
"**vclock** corresponds to **replication.downstream.vclock** (see "
":ref:`below <box_info_replication>`)."
msgstr ""
"**vclock** соответствует часам **replication.downstream.vclock** (см. "
":ref:`ниже <box_info_replication>`)."

msgid ""
"**version** is the Tarantool version. This value is also shown by "
":ref:`tarantool -V <index-tarantool_version>`."
msgstr ""
"**version** -- это версия Tarantool'а. Данное значение также можно "
"отобразить с помощью команды :ref:`tarantool -V <index-"
"tarantool_version>`."

msgid ""
"**vinyl()** returns runtime statistics for the vinyl storage engine. This"
" function is deprecated, use :ref:`box.stat.vinyl() <box_introspection-"
"box_stat_vinyl>` instead."
msgstr ""
"**vinyl** возвращает статистику времени работы для движка базы данных "
"vinyl. Данная функция объявлена устаревшей, используйте "
":ref:`box.stat.vinyl() <box_introspection-box_stat_vinyl>`."

msgid ""
"The **memory** function of ``box.info`` gives the ``admin`` user a "
"picture of the whole Tarantool instance."
msgstr ""
"Функция **memory** в ``box.info`` дает пользователю ``admin`` полное "
"представление об экземпляре Tarantool'а."

msgid ""
"To get a picture of the vinyl subsystem, use :ref:`box.stat.vinyl() "
"<box_introspection-box_stat_vinyl>` instead."
msgstr ""
"Чтобы получить представление о подсистеме vinyl'а, используйте "
":ref:`box.stat.vinyl() <box_introspection-box_stat_vinyl>`."

msgid ""
"**memory().cache** -- number of bytes used for caching user data. The "
"memtx storage engine does not require a cache, so in fact this is the "
"number of bytes in the cache for the tuples stored for the vinyl storage "
"engine."
msgstr ""
"**memory().cache** -- это количество байтов, используемых для кэширования"
" данных пользователей. Движок базы данных memtx не нуждается в кэше, то "
"есть на самом деле это количество байтов в кэше для кортежей движка базы "
"данных vinyl."

msgid ""
"**memory().data** -- number of bytes used for storing user data (the "
"tuples) with the memtx engine and with level 0 of the vinyl engine, "
"without taking memory fragmentation into account."
msgstr ""
"**memory().data** -- количество байтов, используемых для хранения данных "
"пользователей (кортежи) в движке memtx и на уровне 0 движка vinyl, не "
"принимая во внимание фрагментацию памяти."

msgid ""
"**memory().index** -- number of bytes used for indexing user data, "
"including memtx and vinyl memory tree extents, the vinyl page index, and "
"the vinyl bloom filters."
msgstr ""
"**memory().index** -- количество байтов, используемых для индексирования "
"данных пользователей, включая экстенты для деревьев в memtx'е и vinyl'е, "
"индекс страниц и фильтры Блума в vinyl'е."

msgid "**memory().lua** -- number of bytes used for Lua runtime."
msgstr "**memory().lua** -- количество байтов, используемых Lua-интерпретатором."

msgid "**memory().net** -- number of bytes used for network input/output buffers."
msgstr ""
"**memory().net** -- количество байтов, используемых буферами для сетевого"
" ввода-вывода."

msgid ""
"**memory().tx** -- number of bytes in use by active transactions. For the"
" vinyl storage engine, this is the total size of all allocated objects "
"(struct ``txv``, struct ``vy_tx``, struct ``vy_read_interval``) and "
"tuples pinned for those objects."
msgstr ""
"**memory().tx** -- количество байтов, используемых активными "
"транзакциями. Для движка базы данных vinyl это общий размер всех "
"размещаемых объектов (структура ``txv``, структура ``vy_tx``, структура "
"``vy_read_interval``) и кортежей, прикрепленных к этим объектам."

msgid ""
"An example with a minimum allocation while only the memtx storage engine "
"is in use:"
msgstr ""
"Пример с минимальным распределением, когда используется только движок "
"базы данных memtx:"

msgid ""
"tarantool> box.info.memory()\n"
"---\n"
"- cache: 0\n"
"  data: 6552\n"
"  tx: 0\n"
"  lua: 1315567\n"
"  net: 98304\n"
"  index: 1196032\n"
"..."
msgstr ""
"tarantool> box.info.memory()\n"
"---\n"
"- cache: 0\n"
"  data: 6552\n"
"  tx: 0\n"
"  lua: 1315567\n"
"  net: 98304\n"
"  index: 1196032\n"
"..."

msgid ""
"The **gc** function of ``box.info`` gives the ``admin`` user a picture of"
" the factors that affect the :ref:`Tarantool garbage collector "
"<cfg_checkpoint_daemon-garbage-collector>`. The garbage collector "
"compares vclock (:ref:`vector clock <replication-vector>`) values of "
"users and checkpoints, so a look at ``box.info.gc()`` may show why the "
"garbage collector has not removed old WAL files, or show what it may soon"
" remove."
msgstr ""
"Функция **gc** в ``box.info`` дает пользователю ``admin`` полное "
"представление о факторах, которые влияют на :ref:`сборщик мусора "
"Tarantool'а <cfg_checkpoint_daemon-garbage-collector>`. Сборщик мусора "
"сопоставляет значения vclock (:ref:`векторные часы <replication-vector>`)"
" пользователей и контрольных точек, поэтому взглянув на "
"``box.info.gc()``, можно понять, почему сборщик мусора не удалил старые "
"WAL-файлы или что он может вскоре удалить."

msgid ""
"**gc().consumers** -- a list of users whose requests might affect the "
"garbage collector."
msgstr ""
"**gc().consumers** -- список пользователей, запросы которых могут  "
"затронуть сборку мусора."

msgid "**gc().checkpoints** -- a list of preserved checkpoints."
msgstr "**gc().checkpoints** -- список сохраненных контрольных точек."

msgid ""
"**gc().checkpoints[n].references** -- a list of references to a "
"checkpoint."
msgstr "**gc().checkpoints[n].references** -- список ссылок на контрольную точку."

msgid "**gc().checkpoints[n].vclock** -- a checkpoint's vclock value."
msgstr "**gc().checkpoints[n].vclock** -- значение vclock контрольной точки."

msgid ""
"**gc().checkpoints[n].signature** -- a sum of a checkpoint's vclock's "
"components."
msgstr ""
"**gc().checkpoints[n].signature** -- сумма компонентов vclock контрольной"
" точки."

msgid ""
"**gc().checkpoint_is_in_progress** -- true if a checkpoint is in "
"progress, otherwise false"
msgstr ""
"**gc().checkpoint_is_in_progress** -- true если идет создание контрольной"
" точки, в противном случае false."

msgid "**gc().vclock** -- the garbage collector's vclock."
msgstr "**gc().vclock** -- vclock сборщика мусора."

msgid ""
"**gc().signature** -- the sum of the garbage collector's checkpoint's "
"components."
msgstr "**gc().signature** -- сумма компонентов контрольной точки сборщика мусора."

msgid ""
"The **replication** section of ``box.info()`` is a table array with "
"statistics for all instances in the replica set that the current instance"
" belongs to (see also :ref:`\"Monitoring a replica set\" <replication-"
"monitoring>`):"
msgstr ""
"Раздел **replication** (репликация) во вложенном модуле ``box.info()`` "
"содержит статистику по всем экземплярам в наборе реплик относительно "
"текущего экземпляра (см. также :ref:`\"Мониторинг набора реплик\" "
"<replication-monitoring>`):"

msgid ""
"In the following, *n* is the index number of one table item, for example "
":samp:`replication[1]`, which has data about server instance number 1, "
"which may or may not be the same as the current instance (the \"current "
"instance\" is what is responding to ``box.info``)."
msgstr ""
"Далее *n* -- это индексный номер одного элемента таблицы, например, "
":samp:`replication[1]`, который содержит данные о экземпляре сервера "
"номер 1, который может быть или не быть тем же самым, что и текущий "
"экземпляр (\"текущий экземпляр\" -- это тот, что отвечает на "
"``box.info``)."

msgid ""
":samp:`replication[{n}].id` is a short numeric identifier of instance *n*"
" within the replica set. This value is stored in the "
":ref:`box.space._cluster <box_space-cluster>` system space."
msgstr ""
":samp:`replication[{n}].id` -- это короткий числовой идентификатор "
"экземпляра в наборе реплик. Данное значение хранится в системном спейсе "
":ref:`box.space._cluster <box_space-cluster>`."

msgid ""
":samp:`replication[{n}].uuid` is a globally unique identifier of instance"
" *n*. This value is also stored in the :ref:`box.space._cluster "
"<box_space-cluster>` system space."
msgstr ""
":samp:`replication[{n}].uuid` -- это глобально-уникальный идентификатор "
"экземпляра. Данное значение также хранится в системном спейсе "
":ref:`box.space._cluster <box_space-cluster>`."

msgid ""
":samp:`replication[{n}].lsn` is the :ref:`log sequence number "
"<replication-mechanism>` (LSN) for the latest entry in instance *n*'s "
":ref:`write ahead log <index-box_persistence>` (WAL)."
msgstr ""
":samp:`replication[{n}].lsn` -- это :ref:`номер в журнале <replication-"
"mechanism>` (LSN) для последней записи в :ref:`журнале упреждающей записи"
" <index-box_persistence>` (WAL) экземпляра *n*."

msgid ""
":samp:`replication[{n}].upstream` appears (is not nil) if the current "
"instance is following or intending to follow instance *n*, which "
"ordinarily means :samp:`replication[{n}].upstream.status` = ``follow``, "
":samp:`replication[{n}].upstream.peer` = url of instance *n* which is "
"being followed, :samp:`replication[{n}].lag and idle` = the instance's "
"speed, described later. Another way to say this is: "
":samp:`replication[{n}].upstream` will appear when "
":samp:`replication[{n}].upstream.peer` is not of the current instance, "
"and is not read-only, and was specified in "
"``box.cfg{replication={...}}``, so it is shown in "
":ref:`box.cfg.replication <cfg_replication-replication>`."
msgstr ""
":samp:`replication[{n}].upstream` возникает (т.е. не nil), если текущий "
"экземпляр принимает или готов принимать данные от экземпляра *n*, что "
"обычно означает :samp:`replication[{n}].upstream.status` = ``follow``, "
":samp:`replication[{n}].upstream.peer` = url экземпляра *n*, который "
"отдает данные, :samp:`replication[{n}].lag и idle` = скорость экземпляра,"
" описанная позже. По-другому можно сказать, что "
":samp:`replication[{n}].upstream` возникает, когда "
":samp:`replication[{n}].upstream.peer` не принадлежит текущему "
"экземпляру, не является доступным только для чтения и был указан в "
"``box.cfg{replication={...}}``, поэтому он показан в "
":ref:`box.cfg.replication <cfg_replication-replication>`."

msgid ""
":samp:`replication[{n}].upstream.status` is the replication status of the"
" connection with instance *n*:"
msgstr ""
":samp:`replication[{n}].upstream.status` -- это репликационный статус "
"экземпляра:"

msgid "``auth`` means that :ref:`authentication <authentication>` is happening."
msgstr ""
"``auth`` означает, что экземпляр проходит :ref:`аутентификацию "
"<authentication>`."

msgid "``connecting`` means that connection is happening."
msgstr "``connecting`` означает, что происходит подключение."

msgid ""
"``disconnected`` means that it is not connected to the replica set (due "
"to network problems, not replication errors)."
msgstr ""
"``disconnected`` означает, что экземпляр не подключен к набору реплик (по"
" причине проблем в сети, а не ошибок репликации)."

msgid ""
"``follow`` means that the current instance's role is \"replica\" (read-"
"only, or not read-only but acting as a replica for this remote peer in a "
"master-master configuration), and is receiving or able to receive data "
"from instance *n*'s (upstream) master."
msgstr ""
"``follow`` означает, что текущий экземпляр является репликой (только для "
"чтения, или не только для чтения, но ведет себя как реплика для этого "
"удаленного URI в конфигурации master-master) и получает или может "
"получать данные от мастера экземпляра *n* (upstream)."

msgid ""
"``stopped`` means that replication was stopped due to a replication error"
" (for example :ref:`duplicate key <error_codes>`)."
msgstr ""
"``stopped`` означает, что репликация остановилась по причине ошибки "
"репликации (например, :ref:`повторяющийся ключ <error_codes>`)."

msgid ""
"``sync`` means that the master and replica are synchronizing to have the "
"same data."
msgstr ""
"``sync`` означает, что мастер и реплика в данный момент синхронизируются "
"для получения одинакового набора данных."

msgid ""
":samp:`replication[{n}].upstream.idle` is the time (in seconds) since the"
" last event was received. This is the primary indicator of replication "
"health. See more in :ref:`Monitoring a replica set <replication-"
"monitoring>`."
msgstr ""
":samp:`replication[{n}].upstream.idle` -- это время (в секундах) с "
"момента получения последнего события. Это основной индикатор "
"работоспособности репликации. Подробности в :ref:`Monitoring a replica "
"set <replication-monitoring>`."

msgid ""
":samp:`replication[{n}].upstream.peer` contains instance *n*'s :ref:`URI "
"<index-uri>` for example 127.0.0.1:3302. See more in :ref:`Monitoring a "
"replica set <replication-monitoring>`."
msgstr ""
":samp:`replication[{n}].upstream.peer` содержит :ref:`URI <index-uri>` "
"экземпляра *n*, например 127.0.0.1:3302. Более подробную информацию см. в"
" разделе :ref:`Мониторинг набора реплик <replication-monitoring>`."

msgid ""
":samp:`replication[{n}].upstream.lag` is the time difference between the "
"local time of instance *n*, recorded when the event was received, and the"
" local time at another master recorded when the event was written to the "
":ref:`write ahead log <internals-wal>` on that master. See more in "
":ref:`Monitoring a replica set <replication-monitoring>`."
msgstr ""
":samp:`replication[{n}].upstream.lag` -- это разница во времени между "
"локальным временем на экземпляре *n*, зарегистрированным при получении "
"события, и локальное время на другом мастере, зарегистрированное при "
"записи события в :ref:`журнал упреждающей записи <internals-wal>` на этом"
" мастере. Более подробную информацию см. в разделе :ref:`Мониторинг "
"набора реплик <replication-monitoring>`."

msgid ""
":samp:`replication[{n}].upstream.message` contains an error message in "
"case of a :ref:`degraded state <replication-recover>`, otherwise it is "
"nil."
msgstr ""
":samp:`replication[{n}].upstream.message` содержит сообщение об ошибке в "
"случае :ref:`системного сбоя <replication-recover>`, в противном случае "
"-- nil."

msgid ""
":samp:`replication[{n}].downstream` appears (is not nil) with data about "
"an instance that is following instance *n* or is intending to follow it, "
"which ordinarily means :samp:`replication[{n}].downstream.status` = "
"``follow``,"
msgstr ""
":samp:`replication[{n}].downstream` появляется (т.е. не nil), когда "
"имеются данные об экземпляре, который принимает данные от экземпляра *n* "
"или намеревается это делать,что обычно означает "
":samp:`replication[{n}].downstream.status` = ``follow``,"

msgid ""
":samp:`replication[{n}].downstream.vclock` contains the :ref:`vector "
"clock <replication-vector>`, which is a table of '**id**, **lsn**' pairs,"
" for example :code:`vclock: {1: 3054773, 4: 8938827, 3: 285902018}`. "
"(Notice that the table may have multiple pairs although ``vclock`` is a "
"singular name)."
msgstr ""
":samp:`replication[{n}].downstream.vclock` содержит :ref:`векторные часы "
"<replication-vector>`, которые представляют собой таблицу из пар '**id**,"
" **lsn**', например :code:`vclock: {1: 3054773, 4: 8938827, 3: "
"285902018}` (Обратите внимание, что таблица может иметь несколько пар, "
"хотя vclock - это единственное имя)."

msgid ""
"Even if instance *n* is :ref:`removed <replication-remove_instances>`, "
"its values will still appear here; however, its values will be overridden"
" if an instance joins later with the same UUID. Vector clock pairs will "
"only appear if ``lsn > 0``."
msgstr ""
"Даже если экземпляр :ref:`удален <replication-remove_instances>`, его "
"значения все равно появятся здесь; однако, его значения будут "
"переопределены, если позже экземпляр присоединится с тем же UUID. Пары "
"векторных часов будут появляться только если ``lsn > 0``. "

msgid ""
":samp:`replication[{n}].downstream.vclock` may be the same as the current"
" instance's vclock (``box.info.vclock``) because this is for all known "
"vclock values of the cluster. A master will know what is in a replica's "
"copy of vclock because, when the master makes a data change, it sends the"
" change information to the replica (including the master's vector clock),"
" and the replica replies with what is in its entire vector clock table."
msgstr ""
":samp:`replication[{n}].downstream.vclock` может быть таким же, как и "
"vclock текущего экземпляра (``box.info.vclock``), потому что все значения"
" vclock в кластере известны. Мастер будет знать, что находится в копии "
"vclock реплики, потому что, когда мастер делает изменение данных, он "
"посылает информацию об изменении на реплику (включая векторные часы "
"мастера), и реплика отвечает тем, что находится в ее таблице векторных "
"часов."

msgid ""
":samp:`replication[{n}].downstream.idle` is the time (in seconds) since "
"the last time that instance *n* sent events through the downstream "
"replication."
msgstr ""
":samp:`replication[{n}].downstream.idle` -- это время (в секундах) с "
"момента последней отправки событий экземпляром *n* через "
"downstream-репликацию."

msgid ""
":samp:`replication[{n}].downstream.status` is the replication status for "
"downstream replications:"
msgstr ""
":samp:`replication[{n}].downstream.status` -- это статус для "
"downstream-репликации:"

msgid "``stopped`` means that downstream replication has stopped,"
msgstr "``stopped`` означает, что downstream-репликация остановлена,"

msgid ""
"``follow`` means that downstream replication is in progress (instance *n*"
" is ready to accept data from the master or is currently doing so)."
msgstr ""
"``follow`` означает, что downstream-репликация находится в процессе "
"(экземпляр *n* готов принимать данные от мастера или уже делает это)."

msgid ""
":samp:`replication[{n}].downstream.message` and "
":samp:`replication[{n}].downstream.system_message` will be nil unless a "
"problem occurs with the connection. For example, if instance *n* goes "
"down, then one may see ``status = 'stopped'``, ``message = 'unexpected "
"EOF when reading from socket'``, and ``system_message = 'Broken pipe'``. "
"See also :ref:`degraded state <replication-recover>`."
msgstr ""
":samp:`replication[{n}].downstream.message` and "
":samp:`replication[{n}].downstream.system_message` не появятся, пока не "
"возникнет проблем с соединением. Например, если экземпляр *n* даст сбой, "
"то можно будет увидеть ``status = 'stopped'``, ``message = 'unexpected "
"EOF when read from socket'``, и ``system_message = 'broken pipe'``. См. "
"также :ref:`\"сбой\" <replication-recover>`."

msgid ""
"Since ``box.info`` contents are dynamic, it's not possible to iterate "
"over keys with the Lua ``pairs()`` function. For this purpose, "
"``box.info()`` builds and returns a Lua table with all keys and values "
"provided in the submodule."
msgstr ""
"Поскольку содержимое вложенного модуля ``box.info`` является "
"динамическим, невозможно провести итерацию по ключам с помощью "
"Lua-функции ``pairs()``. Для этой цели модуль ``box.info()`` создает и "
"возвращает Lua-таблицу со всеми ключами и значениями во вложенном модуле."

msgid "return"
msgstr "возвращается"

msgid "keys and values in the submodule"
msgstr "ключи и значения во вложенном модуле"

msgid "rtype"
msgstr "тип возвращаемого значения"

msgid "table"
msgstr "таблица"

msgid "**Example:**"
msgstr "**Пример:**"

msgid ""
"This example is for a master-replica set that contains one master "
"instance and one replica instance. The request was issued at the replica "
"instance."
msgstr ""
"Данный пример приводится для набора со схемой мастер-реплика, который "
"включает в себя один мастер-экземпляр и один реплика-экземпляр. Запрос "
"был отправлен с реплики-экземпляра."

msgid ""
"tarantool> box.info()\n"
"---\n"
"- version: 1.7.6-68-g51fcffb77\n"
"  id: 2\n"
"  ro: true\n"
"  vclock: {1: 5}\n"
"  uptime: 917\n"
"  lsn: 0\n"
"  vinyl: []\n"
"  cluster:\n"
"    uuid: 783e2285-55b1-42d4-b93c-68dcbb7a8c18\n"
"  pid: 35341\n"
"  status: running\n"
"  signature: 5\n"
"  replication:\n"
"    1:\n"
"      id: 1\n"
"      uuid: 471cd36e-cb2e-4447-ac66-2d28e9dd3b67\n"
"      lsn: 5\n"
"      upstream:\n"
"        status: follow\n"
"        idle: 124.98795700073\n"
"        peer: replicator@192.168.0.101:3301\n"
"        lag: 0\n"
"      downstream:\n"
"        vclock: {1: 5}\n"
"    2:\n"
"      id: 2\n"
"      uuid: ac45d5d2-8a16-4520-ad5e-1abba6baba0a\n"
"      lsn: 0\n"
"  uuid: ac45d5d2-8a16-4520-ad5e-1abba6baba0a\n"
"..."
msgstr ""
"tarantool> box.info()\n"
"---\n"
"- version: 1.7.6-68-g51fcffb77\n"
"  id: 2\n"
"  ro: true\n"
"  vclock: {1: 5}\n"
"  uptime: 917\n"
"  lsn: 0\n"
"  vinyl: []\n"
"  cluster:\n"
"    uuid: 783e2285-55b1-42d4-b93c-68dcbb7a8c18\n"
"  pid: 35341\n"
"  status: running\n"
"  signature: 5\n"
"  replication:\n"
"    1:\n"
"      id: 1\n"
"      uuid: 471cd36e-cb2e-4447-ac66-2d28e9dd3b67\n"
"      lsn: 5\n"
"      upstream:\n"
"        status: follow\n"
"        idle: 124.98795700073\n"
"        peer: replicator@192.168.0.101:3301\n"
"        lag: 0\n"
"      downstream:\n"
"        vclock: {1: 5}\n"
"    2:\n"
"      id: 2\n"
"      uuid: ac45d5d2-8a16-4520-ad5e-1abba6baba0a\n"
"      lsn: 0\n"
"  uuid: ac45d5d2-8a16-4520-ad5e-1abba6baba0a\n"
"..."
